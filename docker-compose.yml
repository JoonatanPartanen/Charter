version: '3.4'

networks:
  default:
    external:
      name: aplus_default

volumes:
  pgdata:

services:
  api:
    build: 
      context: .
      dockerfile: ./Dockerfile
    image: charter
    container_name: api
    command: flask run --host=0.0.0.0
    env_file:
      - ./docker.env
    ports:
      - "127.0.0.1:5000:5000"
    volumes:
      - ./app:/dockerapp/app/:ro
      - ./images:/dockerapp/images/
  celery:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: charter
    container_name: celery
    depends_on:
      - rabbitmq
    command: celery worker -A entrypoint_celery.celery --loglevel=info
    env_file:
      - ./docker.env
    volumes:
      - .:/app/
  rabbitmq:
    image: rabbitmq:alpine
    container_name: rabbitmq
    volumes:
      - ./conf/myrabbit.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
  postgres:
    image: postgres
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: ucharter
      POSTGRES_PASSWORD: b8147a98ab04b2276a79d50352722965
    volumes:
      - pgdata:/var/lib/postgresql/data
